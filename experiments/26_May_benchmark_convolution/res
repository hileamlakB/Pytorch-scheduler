----------------file_name: scheduler, line_number: around 1277
ExternKernelOut(
  name=buf0,
  layout=FixedLayout('cuda', torch.float32, size=[1, 512], stride=[512, 1]),
  inputs=[InputBuffer(name='primals_2', layout=FixedLayout('cuda', torch.float32, size=[1, 1024], stride=[1024, 1])), ReinterpretView(
    StorageBox(
      InputBuffer(name='primals_1', layout=FixedLayout('cuda', torch.float32, size=[512, 1024], stride=[1024, 1]))
    ),
    FixedLayout('cuda', torch.float32, size=[1024, 512], stride=[1, 1024]),
    origins={permute}
  )],
  constant_args=(),
  kwargs={},
  output_view=None,
  origin_node=mm,
  origins={mm}
)
ReadWrites(reads={StarDep(name='primals_2'), StarDep(name='primals_1')}, writes={StarDep(name='buf0')}, index_exprs=set(), range_vars=[], var_ranges=None)
{'_args': (primals_2, permute),
 '_erased': False,
 '_input_nodes': {permute: None, primals_2: None},
 '_kwargs': {},
 '_next': output,
 '_prev': permute,
 '_repr_fn': None,
 'graph': <torch.fx.graph.Graph object at 0x2b83a8497820>,
 'meta': {'nn_module_stack': {'L__self___fc': ("L['self'].fc",
                                               <class 'torch.nn.modules.linear.Linear'>)},
          'original_aten': <OpOverload(op='aten.mm', overload='default')>,
          'source_fn': <class 'torch.nn.modules.linear.Linear'>,
          'stack_trace': '  File "/n/home07/hyitayew/Research/Summer '
                         '2023/experiments/26_May_benchmark_convolution/test_mul.py", '
                         'line 12, in forward\n'
                         '    out = self.fc(x)\n',
          'tensor_meta': TensorMetadata(shape=torch.Size([1, 512]), dtype=torch.float32, requires_grad=False, stride=(512, 1), memory_format=torch.contiguous_format, is_quantized=False, qparams={}),
          'val': FakeTensor(..., device='cuda:0', size=(1, 512))},
 'name': 'mm',
 'op': 'call_function',
 'target': <OpOverload(op='aten.mm', overload='default')>,
 'type': None,
 'users': {output: None}}
mm
-------------------------
origin <class 'torch.fx.node.Node'> mm
